<?
# ----------------------------------- Python -----------------------------------
# ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
# ------------------------------------------------------------------------------

# Imports
import numpy as np

# Set default keys
default_keys = {'min_mesh_angle' : 20.,
				'refine_all_circle' : 2,
				'uol' : 1.e-9,
				'pore_angle' : 0.}

for dkey, dval in default_keys.iteritems():
	if not dkey in keys:
		keys[dkey] = dval

# Set all missing values for the z-direction maximum meshing side lengths using
# the minimum of the two horizontal side lengths
sl_z_default = min([keys['max_sl_polygon'], keys['max_sl_circle']])
sl_z_keys = ['max_sl_z_sub', 'max_sl_z_slab', 'max_sl_z_coat', 'max_sl_z_sup']
for zkey in sl_z_keys:
	if not zkey in keys:
		keys[zkey] = sl_z_default

# Calculate the lower and upper radii of the cone from center diameter and
# pore angle
alpha = keys['pore_angle']
d = keys['d']
h = keys['h']
keys['radius_i'] = d/2. - h*np.tan(np.deg2rad(alpha))/2.
keys['radius_f'] = keys['d'] - keys['radius_i']

# ------------------------------------------------------------------------------
# ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
# ------------------------------------------------------------------------------
?>
Layout {
  UnitOfLength = %(uol)e
  MeshOptions {
    MinimumMeshAngle = %(min_mesh_angle)4f
  }

  Polygon { 
    Name = "ComputationalDomain" 
    DomainId = 1
    Priority = -1 
    PeriodicUnitCell {
      LatticeVectorLengths = [%(p)4f %(p)4f]
      LatticeAngle = 60
      Shape = Hexagonal
    }
    MeshOptions {
      MaximumSidelength = %(max_sl_polygon)4f
    }
  }
  
  Circle {
    Name = "Cone"
    DomainId = 2
    Priority = 1
    Radius = %(radius_i)4f
    RefineAll = %(refine_all_circle)i
    MeshOptions {
      MaximumSidelength = %(max_sl_circle)4f
    }
  }
  
  Extrusion {
  
    LayerInterface {
	  Name = "BoundaryInterfaceBottom"
      BoundaryClass = Transparent
    }
    
    Layer {
      Name = "Subspace"
      Thickness = %(h_sub)4f
      DomainId = 1
      MeshOptions {
		MaximumSidelengthZ = %(max_sl_z_sub)4f
        MaximumSidelengthZLower = %(max_sl_z_sub)4f
        MaximumSidelengthZUpper = %(max_sl_z_slab)4f
      }
    }

    Layer {
      Name = "Slab"
      Thickness = %(h)4f
      DomainIdMapping = [1 2, 2 3]
      MeshOptions {
        MaximumSidelengthZ = %(max_sl_z_slab)4f
      }
    }
    
    LayerInterface {
	  Name = "InterfaceCoating"
      GeometryValues = [Cone/Radius = %(radius_f)4f]
    }
    
    Layer {
      Name = "Coating"
      Thickness = %(h_coating)4f
      DomainIdMapping = [1 5]
      MeshOptions {
		MaximumSidelengthZ = %(max_sl_z_coat)4f
        MaximumSidelengthZLower = %(max_sl_z_slab)4f
        MaximumSidelengthZUpper = %(max_sl_z_coat)4f
      }
    }
    
    LayerInterface {
	  Name = "InterfaceTop"
      GeometryValues = [Cone/Radius = %(radius_f)4f]
    }
    
    Layer {
      Name = "Superspace"
      Thickness = %(h_sup)4f
      DomainIdMapping = [1 4]
      MeshOptions {
		MaximumSidelengthZ = %(max_sl_z_sup)4f
        MaximumSidelengthZLower = %(max_sl_z_coat)4f
        MaximumSidelengthZUpper = %(max_sl_z_sup)4f
      }
    }
    
    LayerInterface {
	  Name = "BoundaryInterfaceTop"
	  GeometryValues = [Cone/Radius = %(radius_f)4f]
      BoundaryClass = Transparent
    }
  }
}